package com.oxygenxml.git.view.util;

import org.eclipse.jgit.api.errors.CheckoutConflictException;

import com.oxygenxml.git.service.entities.FileStatusUtil;
import com.oxygenxml.git.service.exceptions.NoChangesInSquashedCommitException;
import com.oxygenxml.git.translator.Tags;
import com.oxygenxml.git.translator.Translator;
import com.oxygenxml.git.view.dialog.MessagePresenterProvider;
import com.oxygenxml.git.view.dialog.internal.DialogType;

import ro.sync.exml.workspace.api.PluginWorkspaceProvider;

/**
 * Contains methods to treat exceptions generated by git operations.
 * 
 * @author alex_smarandache
 *
 */
public class ExceptionHandlerUtil {

  /**
   * Translator.
   */
  private static final Translator TRANSLATOR = Translator.getInstance();
  
  /**
   * Hidden constructor.  
   */
  private ExceptionHandlerUtil() {
    // not needed
  }
  
  /**
   * Treat exceptions generated by merge operation.
   * 
   * @param e The exception throw. 
   */
  public static void handleMergeException(final Exception e) {
    if(e instanceof CheckoutConflictException) {
      MessagePresenterProvider.getBuilder(
          TRANSLATOR.getTranslation(Tags.MERGE_FAILED_UNCOMMITTED_CHANGES_TITLE), DialogType.WARNING)
          .setTargetFilesWithTooltips(FileStatusUtil.comuteFilesTooltips((((CheckoutConflictException)e).getConflictingPaths())))
          .setMessage(TRANSLATOR.getTranslation(Tags.MERGE_FAILED_UNCOMMITTED_CHANGES_MESSAGE))
          .setCancelButtonVisible(false)
          .buildAndShow(); 
    } else if (e instanceof NoChangesInSquashedCommitException) {
      MessagePresenterProvider.getBuilder(
          TRANSLATOR.getTranslation(Tags.SQUASH_NO_CHANGES_DETECTED_TITLE), DialogType.INFO)
      .setCancelButtonVisible(false)
      .setMessage(e.getMessage())
      .buildAndShow();
    } else {
      PluginWorkspaceProvider.getPluginWorkspace().showErrorMessage(e.getMessage(), e);
    }
  }
  
   
}
